[workspace]
members = ["bevy_prng"]
resolver = "3"

[workspace.package]
authors = ["Gon√ßalo Rica Pais da Silva <bluefinger@gmail.com>"]
edition = "2024"
repository = "https://github.com/Bluefinger/bevy_rand"
license = "MIT OR Apache-2.0"
version = "0.12.0"
rust-version = "1.86.0"

[workspace.dependencies]
bevy_app = { version = "0.17.0-dev", git = "https://github.com/bevyengine/bevy", default-features = false }
bevy_ecs = { version = "0.17.0-dev", git = "https://github.com/bevyengine/bevy", default-features = false }
bevy_reflect = { version = "0.17.0-dev", git = "https://github.com/bevyengine/bevy", default-features = false }
serde = { version = "1.0.218", default-features = false, features = ["derive"] }
rand_core = { version = "0.9.3", features = ["os_rng"] }
rand_core_06 = { version = "0.6.4", default-features = false, package = "rand_core" }
rand_chacha = { version = "0.9.0", default-features = false }
wyrand = "0.3.2"
rand_pcg = "0.9.0"
rand_xoshiro = "0.7.0"

[package]
name = "bevy_rand"
version = { workspace = true }
edition = { workspace = true }
authors = { workspace = true }
description = "A plugin to integrate rand for ECS optimised RNG for the Bevy game engine."
repository = { workspace = true }
license = { workspace = true }
keywords = ["game", "bevy", "rand", "rng"]
categories = ["game-engines", "algorithms"]
exclude = ["/.*", "Cargo.lock"]
rust-version = { workspace = true }

[features]
default = ["serialize", "thread_local_entropy", "std", "bevy_reflect"]
bevy_reflect = [
    "dep:bevy_reflect",
    "bevy_app/bevy_reflect",
    "bevy_ecs/bevy_reflect",
    "bevy_prng/bevy_reflect",
]
compat = ["bevy_prng/compat", "dep:rand_core_06"]
std = ["bevy_prng/std", "getrandom/std"]
experimental = []
thread_local_entropy = ["dep:rand_chacha", "std"]
serialize = ["dep:serde", "rand_core/serde", "bevy_prng/serialize"]
rand_chacha = ["bevy_prng/rand_chacha"]
rand_pcg = ["bevy_prng/rand_pcg"]
rand_xoshiro = ["bevy_prng/rand_xoshiro"]
wyrand = ["bevy_prng/wyrand"]
wasm_js = ["getrandom/wasm_js"]

[dependencies]
bevy_app.workspace = true
bevy_ecs.workspace = true
bevy_reflect = { workspace = true, optional = true }
bevy_prng = { path = "bevy_prng", version = "0.12" }

# others
getrandom = "0.3.1"
rand_core.workspace = true
rand_core_06 = { workspace = true, optional = true }
rand_chacha = { workspace = true, optional = true }
serde = { workspace = true, optional = true }

# This cfg cannot be enabled, but it forces Cargo to keep bevy_prng's
# version in lockstep with bevy_rand, so that even minor versions
# cannot be out of step with bevy_rand due to dependencies on traits
# and implementations between the two crates.
[target.'cfg(any())'.dependencies]
bevy_prng = { path = "bevy_prng", version = "=0.12" }

[dev-dependencies]
bevy_app = { version = "0.17.0-dev", git = "https://github.com/bevyengine/bevy", default-features = false, features = [
    "bevy_reflect",
] }
bevy_ecs = { version = "0.17.0-dev", git = "https://github.com/bevyengine/bevy", default-features = false, features = [
    "bevy_reflect",
] }
bevy_math = { version = "0.17.0-dev", git = "https://github.com/bevyengine/bevy", package = "bevy_math" }
bevy_prng = { path = "bevy_prng", version = "0.12", default-features = false, features = [
    "rand_chacha",
    "wyrand",
] }
rand = "0.9"
ron = { version = "0.8.0", features = ["integer128"] }

[target.'cfg(all(target_family = "wasm", any(target_os = "unknown", target_os = "none")))'.dev-dependencies]
wasm-bindgen-test = "0.3"
getrandom = { version = "0.3", features = ["wasm_js"] }
getrandom_02 = { version = "0.2", features = ["js"], package = "getrandom" }
bevy_ecs = { version = "0.17.0-dev", git = "https://github.com/bevyengine/bevy", default-features = false, features = [
    "bevy_reflect",
] }

[[example]]
name = "turn_based_game"
path = "examples/turn_based_game.rs"

[package.metadata.docs.rs]
all-features = true
